#! /nix/store/cfqbabpc7xwg8akbcchqbq3cai6qq2vs-bash-5.2p37/bin/bash

#
# This is a hacked-together copy of the script generated by "build-vm"
# to use an ISO instead of the various kernel images etc.
#
# You should go to boot options and select the last option (serial/tty).
#

export PATH=/nix/store/rry6qingvsrqmc7ll7jgaqpybcbdgf5v-coreutils-9.7/bin${PATH:+:}$PATH

set -e

# Create an empty ext4 filesystem image. A filesystem image does not
# contain a partition table but just a filesystem.
createEmptyFilesystemImage() {
  local name=$1
  local size=$2
  local temp=$(mktemp)
  /nix/store/h0cq943b1g51r8jr84fyc0nf8dz72gqw-qemu-host-cpu-only-9.2.4/bin/qemu-img create -f raw "$temp" "$size"
  /nix/store/v0hf0465c5pr21hvvc034akr6f9qg8f6-e2fsprogs-1.47.2-bin/bin/mkfs.ext4 -L nixos "$temp"
  /nix/store/h0cq943b1g51r8jr84fyc0nf8dz72gqw-qemu-host-cpu-only-9.2.4/bin/qemu-img convert -f raw -O qcow2 "$temp" "$name"
  rm "$temp"
}

NIX_DISK_IMAGE=$(readlink -f "${NIX_DISK_IMAGE:-./rescue-iso.qcow2}") || test -z "$NIX_DISK_IMAGE"

if test -n "$NIX_DISK_IMAGE" && ! test -e "$NIX_DISK_IMAGE"; then
    echo "Disk image do not exist, creating the virtualisation disk image..."

    createEmptyFilesystemImage "$NIX_DISK_IMAGE" "20480M"

    echo "Virtualisation disk image created."
fi

# Create a directory for storing temporary data of the running VM.
if [ -z "$TMPDIR" ] || [ -z "$USE_TMPDIR" ]; then
    TMPDIR=$(mktemp -d nix-vm.XXXXXXXXXX --tmpdir)
fi



# Create a directory for exchanging data with the VM.
mkdir -p "$TMPDIR/xchg"







cd "$TMPDIR"



# Start QEMU.
exec /nix/store/h0cq943b1g51r8jr84fyc0nf8dz72gqw-qemu-host-cpu-only-9.2.4/bin/qemu-system-x86_64 -machine accel=kvm:tcg -cpu max \
    -name rescue-iso \
    -m 4096 \
    -smp 2 \
    -device virtio-rng-pci \
    -net none \
    -virtfs local,path=/nix/store,security_model=none,mount_tag=nix-store \
    -virtfs local,path="${SHARED_DIR:-$TMPDIR/xchg}",security_model=none,mount_tag=shared \
    -virtfs local,path="$TMPDIR"/xchg,security_model=none,mount_tag=xchg \
    -drive cache=writeback,file="$NIX_DISK_IMAGE",id=drive1,if=none,index=1,werror=report -device virtio-blk-pci,bootindex=1,drive=drive1,serial=root \
    -machine accel=kvm \
    -device virtio-keyboard \
    -cdrom /home/ian_sollars/nixos-public.iso \
    -nographic \
    $QEMU_OPTS \
    "$@"
